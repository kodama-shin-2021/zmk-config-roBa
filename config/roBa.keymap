#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        layer6 {
            bindings = <&mo 6>;
            key-positions = <35 34>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        text: pass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(K) &kp I &kp J &kp U &kp M &kp O &kp N8 &kp N0 &kp UNDER>;
            label = "PASS";
        };

        layer_test: layer_test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5 &mkp MB2>;
            label = "LAYER_TEST";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl MOUSE>;

            label = "MKP_EXIT_AML";
        };

        to_layer_0_2: to_layer_0_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 2>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>,
                <&macro_tap>,
                <&to 0>;

            label = "TO_LAYER_0_2";
        };

        to_layer_0_3: to_layer_0_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_tap>,
                <&to 0>;

            label = "TO_LAYER_0_3";
        };

        to_layer_0_5: to_layer_0_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 5>,
                <&macro_tap>,
                <&to 0>;

            label = "TO_LAYER_0_5";
        };

        to_layer_0_6: to_layer_0_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 6>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_tap>,
                <&to 0>;

            label = "TO_LAYER_0_6";
        };

        to_layer_0_win: to_layer_0_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 0 &kp LEFT_WIN>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 0 &kp LEFT_WIN>,
                <&macro_tap>,
                <&to 0 &kp LANGUAGE_2>;

            label = "TO_LAYER_0_win";
        };

        to_layer_0_shift: to_layer_0_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 0 &kp RSHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 0 &kp RSHIFT>,
                <&macro_tap>,
                <&to 0>;

            label = "TO_LAYER_0_shift";
        };

        to_layer_0_layer: to_layer_0_layer {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &mo MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0_LAYER";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        // スクロール設定

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        mouce_and_layer: mouce_and_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUCE_AND_LAYER";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E      &kp R                    &kp T                                          &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D      &kp F                    &kp G        &kp LG(SPACE)      &kp MINUS      &kp H        &kp J  &kp K      &lt 1 L     &lt 3 COLON
&kp Z             &kp X         &kp C      &kp V                    &kp B        &kp TAB            &kp BACKSPACE  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp RSHIFT
&kp LS(LEFT_ALT)  &kp LEFT_ALT  &kp LCTRL  &mt LEFT_WIN LANGUAGE_2  &lt 3 LANG2  &lt 2 SPACE        &lt 2 ENTER    &lt 4 LANG1                                &kp LC(UP)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans        &trans         &trans                                        &kp LC(UP_ARROW)  &kp LG(LA(LEFT))      &kp LG(LA(RIGHT))       &trans  &trans
&trans  &trans  &kp LC(LEFT)  &kp LC(RIGHT)  &trans  &kp C_VOLUME_UP        &none          &kp LG(PLUS)      &mkp MB1              &mouce_and_layer 5 MB2  &trans  &lt 6 LC(UP)
&trans  &trans  &trans        &trans         &trans  &kp C_VOLUME_DOWN      &none          &kp LG(MINUS)     &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)   &none   &kp LS(LG(NUMBER_4))
&trans  &trans  &trans        &trans         &trans  &trans                 &kp LG(LS(R))  &kp LG(W)                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        NUM {
            bindings = <
&kp ESC               &kp LS(LG(LEFT))            &kp LS(LG(UP_ARROW))  &kp LS(LG(RIGHT))      &kp LG(LS(RIGHT_BRACKET))                                               &kp PLUS   &kp N7        &kp N8        &kp N9        &kp COMMA
&kp LA(LC(LG(UP)))    &kp LA(LC(LG(RIGHT)))       &kp LG(LS(LA(LEFT)))  &kp LS(LA(LG(RIGHT)))  &kp LS(LA(LG(L)))          &kp LG(LS(LA(L)))                 &kp SPACE  &kp MINUS  &kp N4        &kp N5        &kp NUMBER_6  &kp COLON
&kp LC(LA(LG(LEFT)))  &kp LC(LA(LG(DOWN_ARROW)))  &trans                &trans                 &kp LS(LG(LA(L)))          &kp LS(LA(LG(LEFT_BRACKET)))      &trans     &kp SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0
&trans                &kp LEFT_WIN                &trans                &trans                 &trans                     &trans                            &trans     &trans                                               &kp PERIOD
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &none   &none       &none            &kp LS(LG(T))                                 &trans        &kp LA(LEFT)  &kp UP_ARROW  &kp LA(RIGHT)  &trans
&kp LS(LG(A))     &none   &kp DELETE  &kp RIGHT_ARROW  &text          &kp C_VOLUME_UP        &trans  &kp LEFT_ALT  &kp LEFT      &kp DOWN      &kp RIGHT      &trans
&kp LEFT_SHIFT    &none   &kp LG(C)   &kp LG(LS(V))    &kp LEFT       &kp C_VOLUME_DOWN      &trans  &kp DOWN      &kp LEFT_ALT  &kp END       &trans         &trans
&kp LS(LEFT_ALT)  &trans  &trans      &trans           &trans         &trans                 &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SYMBOL {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND    &kp SLASH  &kp BACKSLASH                         &kp SQT            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE
&kp AT_SIGN  &kp HASH    &kp QUESTION     &kp MINUS  &kp EQUAL      &trans      &kp GRAVE  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI        &kp COLON
&kp CARET    &kp TILDE   &kp EXCLAMATION  &kp PLUS   &kp ASTRK      &trans      &kp PIPE   &kp LT             &kp GREATER_THAN      &kp COMMA              &kp PERIOD      &kp UNDERSCORE
&trans       &trans      &trans           &trans     &kp LANG1      &trans      &trans     &trans                                                                          &kp LS(LG(NUMBER_4))
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                        &kp LG(TILDE)  &kp LA(LG(LEFT))      &kp LA(LG(RIGHT))      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP        &kp LG(MINUS)  &kp LG(PLUS)   &none                 &none                  &trans  &kp RIGHT_ALT
&trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_DOWN      &kp LG(MINUS)  &kp LG(PLUS)   &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none   &kp LEFT_ALT
&trans  &trans  &trans  &trans  &trans  &trans                 &kp LG(LS(R))  &kp LG(W)                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                            &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans        &trans         &mkp MB1      &mkp MB2      &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader   &trans         &trans        &trans        &trans        &none
&trans  &trans        &trans        &trans        &trans  &trans      &kp LC(LEFT)  &kp LC(RIGHT)                                            &none
            >;
        };
    };
};
